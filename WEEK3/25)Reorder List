ListNode* reverse(ListNode *temp)
    {
        ListNode *prev=NULL;
        ListNode *curr=temp;
        ListNode *n;
        while(curr)
        {
            n=curr->next;
            curr->next=prev;
            prev=curr;
            curr=n;
        }
        return prev;
    }
    ListNode* merge(ListNode *l1,ListNode *l2)
    {
        while(l1)
        {
            ListNode *temp1=l1->next;
            ListNode *temp2=l2->next;
            l1->next=l2;
            if(temp1==NULL)
            {
                break;
            }
            l2->next=temp1;
            l1=temp1;
            l2=temp2;
        }
        return l1;
    }
    void reorderList(ListNode* head) {
        if(head==NULL || head->next==NULL)
        {
            return;
        }
        ListNode *slow=head;
        ListNode *fast=head;
        ListNode *prev=NULL;
        while(fast && fast->next)
        {
            prev=slow;
            slow=slow->next;
            fast=fast->next->next;
        }
        prev->next=NULL;
        ListNode *first=head;
        ListNode *second=reverse(slow);
        merge(first,second);
        return;
    }
