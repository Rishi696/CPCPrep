class Solution{
  public:
    int maxLen(int arr[], int N)
    {
        unordered_map<int,int> map;
        map.insert({0,-1});
        int maxlength=0;
        int sum=0;
        for(int i=0;i<N;i++)
        {
            if(arr[i]==0)
            {
                sum+=-1;
            }
            else if(arr[i]==1)
            {
                sum+=1;
            }
            
            if(map.find(sum)!=map.end())
            {
                int x=i-map[sum];
                if(maxlength<x)
                {
                    maxlength=x;
                }
            }
            else
            {
            map.insert({sum,i});
            }
        }
        return maxlength;
    }
};
-----------------------------------------------------------------------------------------------------------------------
brute force
class Solution{
  public:
    int maxLen(int arr[], int N)
    {
        int maxcount=0;
        for(int i=0;i<N;i++)
        {
            int count=0;
            for(int j=i;j<N;j++)
            {
                if(arr[j]==0)
                {
                    count+=1;
                }
                else if(arr[j]==1)
                {
                    count-=1;
                }
                if(count==0)
                {
                    if(j-i+1>maxcount)
                    {
                        maxcount=j-i+1;
                    }
                }
            }
        }
        return maxcount;
    }
};
