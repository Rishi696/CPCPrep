class Solution {
public:
    int searchfirst(vector<int>& nums,int target)
    {
        int index=-1;
        int s=0,e=nums.size()-1;
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            if(nums[mid]>=target)
            {
                e=mid-1;
            }
            else
            {
                s=mid+1;
            }
            if(nums[mid]==target)
            {
                index=mid;
            }
        }
        return index;
    }
    int searchlast(vector<int>& nums,int target)
    {
        int index=-1;
        int s=0,e=nums.size()-1;
        while(s<=e)
        {
            int mid=s+(e-s)/2;
            if(nums[mid]<=target)
            {
                s=mid+1;
            }
            else
            {
                e=mid-1;
            }
            if(nums[mid]==target)
            {
                index=mid;
            }
        }
        return index;
    }
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        ans.push_back(-1);
        ans.push_back(-1);
        ans[0]=searchfirst(nums,target);
        ans[1]=searchlast(nums,target);
        return ans;
    }
};
