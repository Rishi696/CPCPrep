class Solution
{
    public:
    //Function to connect nodes at same level.
    void connect(Node *root)
    {
       queue<Node*> q;
       q.push(root);
       while(!q.empty())
       {
           Node *prev=NULL;
           int size=q.size();
           while(size)
           {
               Node *front=q.front();
               if(prev!=NULL)
               {
                   prev->nextRight=front;
               }
               prev=front;
               if(front->left)
               {
                   q.push(front->left);
               }
               if(front->right)
               {
                   q.push(front->right);
               }
               q.pop();
               size--;
           }
       }
    }    
      
};


-------------------------------------------------------------------------------------------------------------------------------------------------
class Solution
{
    public:
    //Function to connect nodes at same level.
    Node* getnextright(Node *a)
    {
        Node *temp=a->nextRight;
        while(temp)
        {
            if(temp->left)
            {
                return temp->left;
            }
            if(temp->right)
            {
                return temp->right;
            }
            temp=temp->nextRight;
        }
        return NULL;
    }
    void connect(Node *root)
    {
       if(root==NULL)
       {
           return;
       }
       root->nextRight=NULL;
       Node *p=root;
       while(p!=NULL)
       {
           Node *q=p;
           while(q!=NULL)
           {
               if(q->left)
               {
                   if(q->right)
                   {
                       q->left->nextRight=q->right;
                   }
                   else
                   {
                       q->left->nextRight=getnextright(q);
                   }
               }
               if(q->right)
               {
                   q->right->nextRight=getnextright(q);
               }
               q=q->nextRight;
           }
           if(p->left)
           {
               p=p->left;
           }
           else if(p->right)
           {
               p=p->right;
           }
           else
           {
               p=getnextright(p);
           }
       }
    }    
      
};
