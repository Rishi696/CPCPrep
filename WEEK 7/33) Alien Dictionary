class Solution{
    public:
    void dfs(int i,vector<int> &visited,vector<vector<int>> &g, string &ans)
    {
        visited[i]=1;
        for(auto x:g[i])
        {
            if(!visited[x])
            {
                dfs(x,visited,g,ans);
            }
        }
        char ch='a'+i;
        ans=ch+ans;
    }
    string findOrder(string dict[], int N, int K) {
        vector<vector<int>> g(K);
        string w1;
        string w2;
        for(int i=0;i<N-1;i++)
        {
            w1=dict[i];
            w2=dict[i+1];
            for(int j=0;j<min(w1.length(),w2.length());j++)
            {
                if(w1[j]!=w2[j])
                {
                    g[w1[j]-'a'].push_back(w2[j]-'a');
                    break;
                }
            }
        }
        vector<int> visited(K,0);
        string ans="";
        for(int i=0;i<K;i++)
        {
            if(!visited[i])
            {
                dfs(i,visited,g,ans);
            }
        }
        return ans;
    }
};
