class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int rows=mat.size();
        int cols=mat[0].size();
        vector<vector<int>> dist(rows,vector<int>(cols,INT_MAX));
        queue<pair<int,int>> q;
        for(int i=0;i<rows;i++)
        {
            for(int j=0;j<cols;j++)
            {
                if(mat[i][j]==0)
                {
                    dist[i][j]=0;
                    q.push({i,j});
                }
            }
        }
        vector<vector<int>> dir={{-1,0},{1,0},{0,-1},{0,1}};
        while(!q.empty())
        {
            pair<int,int> front=q.front();
            q.pop();
            int curr_x=front.first;
            int curr_y=front.second;
            for(auto it:dir)
            {
                int x=curr_x+it[0];
                int y=curr_y+it[1];
                if(x>=0 && y>=0 && x<rows && y<cols)
                {
                    if(dist[x][y]>dist[curr_x][curr_y]+1)
                    {
                        dist[x][y]=dist[curr_x][curr_y]+1;
                        q.push({x,y});
                    }
                }
            }
        }
        return dist;
    }
};
