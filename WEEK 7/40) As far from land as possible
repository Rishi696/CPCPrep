class Solution {
public:
    int maxDistance(vector<vector<int>>& grid) {
        int rows=grid.size();
        int cols=grid[0].size();
        queue<pair<int,int>> q;
        for(int i=0;i<rows;i++)
        {
            for(int j=0;j<cols;j++)
            {
                if(grid[i][j]==1)
                {
                    q.push({i,j});
                }
            }
        }
        int max_dist=0;
        vector<pair<int,int>> dir={{1,0},{-1,0},{0,1},{0,-1}};
        
            while(!q.empty())
            {
                pair<int,int> front=q.front();
                q.pop();
                int curr_x=front.first;
                int curr_y=front.second;
                for(auto it:dir)
                {
                    int x=curr_x+it.first;
                    int y=curr_y+it.second;

                    if(x>=0 && y>=0 && x<rows && y<cols && grid[x][y]==0)
                    {
                        grid[x][y]=grid[curr_x][curr_y]+1;
                        q.push({x,y});
                        max_dist=max(max_dist,grid[x][y]);
                    }
                }
            }
        return max_dist-1;
    }
};
