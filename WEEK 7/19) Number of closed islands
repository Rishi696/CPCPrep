class Solution {
public:
    bool dfs(vector<vector<int>>& grid,vector<vector<int>>& visited,int rows,int cols,int i,int j)
    {
        if(i<0 || j<0 || i>=rows || j>=cols) return false;
        if(visited[i][j]==1 || grid[i][j]==1) return true;
        visited[i][j]=1;
        bool a=dfs(grid,visited,rows,cols,i,j+1);
        bool b=dfs(grid,visited,rows,cols,i,j-1);
        bool c=dfs(grid,visited,rows,cols,i+1,j);
        bool d=dfs(grid,visited,rows,cols,i-1,j); 
        if(a && b && c && d)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    int closedIsland(vector<vector<int>>& grid) {
        int rows=grid.size();
        int cols=grid[0].size();
        vector<vector<int>> visited(rows,vector<int>(cols,0));
        int res=0;
        for(int i=0;i<rows;i++)
        {
            for(int j=0;j<cols;j++)
            {
                if(!visited[i][j] && grid[i][j]==0)
                {
                    if(dfs(grid,visited,rows,cols,i,j))
                    {
                        res++;
                    }
                }
            }
        }
        return res;
    }
};
