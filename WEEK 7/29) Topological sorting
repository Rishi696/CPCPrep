class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	void dfs(int src,stack<int> &s,vector<int> &visited,vector<int> adj[])
	{
	    visited[src]=1;
	    for(auto it:adj[src])
	    {
	        if(!visited[it])
	        {
	            dfs(it,s,visited,adj);
	        }
	    }
	    s.push(src);
	}
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    vector<int> topo;
	    stack<int> s;
	    vector<int> visited(V,0);
	    for(int i=0;i<V;i++)
	    {
	        if(!visited[i])
	        {
	            dfs(i,s,visited,adj);
	        }
	    }
	    while(!s.empty())
	    {
	        int x=s.top();
	        s.pop();
	        topo.push_back(x);
	    }
	    return topo;
	}
};
