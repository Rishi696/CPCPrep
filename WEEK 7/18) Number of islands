class Solution {
public:
    void dfs(vector<vector<char>>& grid,vector<vector<int>>& visited,int rows,int cols,int i,int j)
    {
        if(i<0 || j<0 || i>=rows || j>=cols) return;
        if(visited[i][j]==1 || grid[i][j]=='0') return;
        visited[i][j]=1;
        dfs(grid,visited,rows,cols,i,j+1);
        dfs(grid,visited,rows,cols,i,j-1);
        dfs(grid,visited,rows,cols,i+1,j);
        dfs(grid,visited,rows,cols,i-1,j);  
    }
    int numIslands(vector<vector<char>>& grid) {
        int rows=grid.size();
        int cols=grid[0].size();
        vector<vector<int>> visited(rows,vector<int>(cols,0));
        int res=0;
        for(int i=0;i<rows;i++)
        {
            for(int j=0;j<cols;j++)
            {
                if(!visited[i][j] && grid[i][j]=='1')
                {
                    dfs(grid,visited,rows,cols,i,j);
                    res++;
                }
            }
        }
        return res;
    }
};
