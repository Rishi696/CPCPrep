class Solution {
public:
    void dfs(vector<vector<int>> &image,int sr,int sc,int newColor,int rows,int cols,vector<vector<int>> &visited,int oldColor)
    {
        if(sr<0 || sc<0 || sr>=rows || sc>=cols) return;
        if(visited[sr][sc] || image[sr][sc]!=oldColor) return;
        visited[sr][sc]=1;
        image[sr][sc]=newColor;
        dfs(image,sr,sc+1,newColor,rows,cols,visited,oldColor);
        dfs(image,sr,sc+-1,newColor,rows,cols,visited,oldColor);
        dfs(image,sr+1,sc,newColor,rows,cols,visited,oldColor);
        dfs(image,sr-1,sc,newColor,rows,cols,visited,oldColor);
        
        
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        int rows=image.size();
        int cols=image[0].size();
        vector<vector<int>> visited(rows,vector<int>(cols,0));
        int oldColor=image[sr][sc];
        dfs(image,sr,sc,newColor,rows,cols,visited,oldColor);
        return image;
    }
};
