class Solution
{
    public:
    //Function to add two numbers represented by linked list.
    Node* reverse(Node *curr)
    {
        Node *prev=NULL;
        Node *n;
        while(curr)
        {
            n=curr->next;
            curr->next=prev;
            prev=curr;
            curr=n;
        }
        return prev;
    }
    Node* insertathead(Node* res,Node* newhead)
    {
        newhead->next=res;
        res=newhead;
        return res;
    }
    struct Node* addTwoLists(struct Node* first, struct Node* second)
    {
        Node *l1=reverse(first);
        Node *l2=reverse(second);
        Node *res=NULL;
        int sum=0;
        int carry=0;
        while(l1 || l2)
        {
            sum=carry;
            if(l1)
            {
                sum+=l1->data;
                l1=l1->next;
            }
            if(l2)
            {
                sum+=l2->data;
                l2=l2->next;
            }
            carry=sum/10;
            sum=sum%10;
            
            res=insertathead(res,new Node(sum));
        }
        if(carry!=0)
        {
            res=insertathead(res,new Node(carry));
        }
        return res;
    }
};
