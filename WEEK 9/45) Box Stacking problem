class Solution{
    public:
    /*The function takes an array of heights, width and 
    length as its 3 arguments where each index i value 
    determines the height, width, length of the ith box. 
    Here n is the total no of boxes.*/
    struct box
    {
        int h;
        int w;
        int l;
    };
    static bool compare(struct box a,struct box b)
    {
        if((a.w*a.l)>(b.w*b.l))
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    int maxHeight(int height[],int width[],int length[],int n)
    {
        int len=3*n;
        box arr[len];
        int index=0;
        for(int i=0;i<n;i++)
        {
            arr[index].h=height[i];
            arr[index].w=max(width[i],length[i]);
            arr[index].l=min(width[i],length[i]);
            index+=1;
            arr[index].h=width[i];
            arr[index].w=max(height[i],length[i]);
            arr[index].l=min(height[i],length[i]);
            index+=1;
            arr[index].h=length[i];
            arr[index].w=max(width[i],height[i]);
            arr[index].l=min(width[i],height[i]);
            index+=1;
        }
        sort(arr,arr+len,compare);
        int lis[len];
        for(int i=0;i<len;i++)
        {
            lis[i]=arr[i].h;
        }
        for(int i=1;i<len;i++)
        {
            for(int j=0;j<i;j++)
            {
                if(arr[i].w<arr[j].w && arr[i].l<arr[j].l && lis[i]<lis[j]+arr[i].h)
                {
                    lis[i]=lis[j]+arr[i].h;
                }
            }
        }
        int mx=0;
        for(int i=0;i<len;i++)
        {
            mx=max(mx,lis[i]);
        }
        return mx;
    }
};
