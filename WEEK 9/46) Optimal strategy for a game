int dp[1001][1001];
int solve(int i,int j,int arr[])
{
    if(i>j) return 0;
    if(dp[i][j]!=-1) return dp[i][j];
    int x=arr[i]+min(solve(i+2,j,arr),solve(i+1,j-1,arr));
    int y=arr[j]+min(solve(i,j-2,arr),solve(i+1,j-1,arr));
    return dp[i][j]=max(x,y);
}
long long maximumAmount(int arr[], int n) 
{
    dp[n][n];
    memset(dp,-1,sizeof(dp));
    return solve(0,n-1,arr);
}
